heat_template_version: 2014-10-16


description: >
  OpenShift Master


parameters:

  key_name:
    type: string
    constraints:
    - custom_constraint: nova.keypair

  image:
    type: string
    constraints:
    - custom_constraint: glance.image

  flavor:
    type: string
    constraints:
    - custom_constraint: nova.flavor

  dns_ip:
    type: string
    description: IP address of the DNS server

  docker_volume_size:
    type: number
    description: >
      size of a cinder volume in GB to allocate to docker for container/image
      storage
    default: 25

  rhn_username:
    type: string

  rhn_password:
    type: string
    hidden: true

  rhn_pool:
    type: string
    hidden: true

  deployment_type:
    type: string

  hostname_prefix:
    type: string

  domain_name:
    type: string

  ansible_public_key:
    type: string

  ansible_private_key:
    type: string

  node_hostnames:
    type: string
    default: ''

  ssh_user:
    type: string

  openshift_ansible_git_url:
    type: string

  openshift_ansible_git_rev:
    type: string

  timeout:
    description: Time to wait until the master setup is ready.
    type: number
    default: 10800

  external_network:
    type: string
    constraints:
    - custom_constraint: neutron.network

  dns_node:
    type: string
    default: ''

  dns_node_add:
    type: string
    default: ''

  fixed_network:
    type: string
    constraints:
    - custom_constraint: neutron.network

  fixed_subnet:
    type: string
    constraints:
    - custom_constraint: neutron.subnet

  lb_hostname:
    type: string
    default: ''

  ldap_url:
    type: string
    default: ''

  ldap_preferred_username:
    type: string
    default: 'uid'

  ldap_bind_dn:
    type: string
    default: ''

  ldap_bind_password:
    type: string
    default: ''

  ldap_ca:
    type: string
    default: ''

  ldap_insecure:
    type: string
    default: false

  openshift_sdn:
    type: string

  deploy_registry:
    type: boolean

  deploy_router:
    type: boolean

resources:

  port:
    type: OS::Neutron::Port
    properties:
      security_groups:
      - {get_resource: master_security_group}
      network: {get_param: fixed_network}
      fixed_ips:
      - subnet: {get_param: fixed_subnet}
      replacement_policy: AUTO

  master_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
      - protocol: icmp
      # Just open everything for now:
      - protocol: tcp
        port_range_min: 0
        port_range_max: 65535
      - protocol: udp
        port_range_min: 0
        port_range_max: 65535

  random_hostname_suffix:
    type: OS::Heat::RandomString
    properties:
      character_classes: [{"class": lowercase}, {"class": digits}]
      length: 8

  config_agent:
    type: collect-config-setup/install_config_agent_centos_yum.yaml

  masters-group:
    type: OS::Nova::ServerGroup
    properties:
      name: masters-group
      policies: ['anti-affinity']

  host:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: "HOST-SUFFIX.DOMAIN"
          params:
            HOST: {get_param: hostname_prefix}
            SUFFIX: {get_attr: [random_hostname_suffix, value]}
            DOMAIN: {get_param: domain_name}
      admin_user: {get_param: ssh_user}
      image: {get_param: image}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      networks:
      - port: {get_resource: port}
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_resource: init}
      scheduler_hints:
        group: {get_resource: masters-group}

  docker_volume:
    type: OS::Cinder::Volume
    properties:
      size: {get_param: docker_volume_size}

  docker_volume_attach:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: {get_resource: host}
      volume_id: {get_resource: docker_volume}

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: external_network}
      port_id: {get_resource: port}

  init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: set_hostname}
      - config: {get_resource: included_files}
      - config: {get_resource: rhn_register}
      - config: {get_attr: [config_agent, config]}
        type: multipart
      - config: {get_resource: master_boot}

  set_hostname:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        hostname:
          str_replace:
            template: "HOST-SUFFIX"
            params:
              HOST: {get_param: hostname_prefix}
              SUFFIX: {get_attr: [random_hostname_suffix, value]}
        fqdn:
          str_replace:
            template: "HOST-SUFFIX.DOMAIN"
            params:
              HOST: {get_param: hostname_prefix}
              SUFFIX: {get_attr: [random_hostname_suffix, value]}
              DOMAIN: {get_param: domain_name}

  included_files:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
        - path: /etc/hosts
          content:
            str_replace:
              params:
                $NODE_IP: {get_attr: [floating_ip, floating_ip_address]}
                $NODE_HOSTNAME:
                  str_replace:
                    template: "HOST-SUFFIX"
                    params:
                      HOST: {get_param: hostname_prefix}
                      SUFFIX: {get_attr: [random_hostname_suffix, value]}
                $NODE_DOMAIN: {get_param: domain_name}
              template: {get_file: fragments/etc-node-hosts}
        - path: /root/.ssh/id_rsa
          permissions: 0600
          content: {get_param: ansible_private_key}
        - path: /root/.ssh/id_rsa.pub
          permissions: 0600
          content: {get_param: ansible_public_key}
        - path: /usr/bin/retry
          permissions: 0755
          content: {get_file: fragments/retry.sh}
        ssh_authorized_keys:
        - {get_param: ansible_public_key}

  rhn_register:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          params:
            $RHN_USERNAME: {get_param: rhn_username}
            $RHN_PASSWORD: {get_param: rhn_password}
            $POOL_ID: {get_param: rhn_pool}
          template: {get_file: fragments/rhn-register.sh}

  master_boot:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        str_replace:
          params:
            $DNS_IP: {get_param: dns_ip}
            $MASTER_IP: {get_attr: [floating_ip, floating_ip_address]}
            $OPENSHIFT_ANSIBLE_GIT_URL: {get_param: openshift_ansible_git_url}
            $OPENSHIFT_ANSIBLE_GIT_REV: {get_param: openshift_ansible_git_rev}
            $WC_NOTIFY: { get_attr: ['wait_handle', 'curl_cli'] }
          template: {get_file: fragments/master-boot.sh}

  run_ansible:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      inputs:
        - name: node_hostname
        - name: all_master_nodes
      config:
        str_replace:
          params:
            $ALL_MASTER_NODES: $all_master_nodes
            $DOMAINNAME: {get_param: domain_name}
            $NODE_HOSTNAME: $node_hostname
            $SSH_USER: {get_param: ssh_user}
            $DEPLOYMENT_TYPE: {get_param: deployment_type}
            $LB_HOSTNAME: {get_param: lb_hostname}
            $LDAP_URL: {get_param: ldap_url}
            $LDAP_PREFERRED_USERNAME: {get_param: ldap_preferred_username}
            $LDAP_BIND_DN: {get_param: ldap_bind_dn}
            $LDAP_BIND_PASSWORD: {get_param: ldap_bind_password}
            $LDAP_CA: {get_param: ldap_ca}
            $LDAP_INSECURE: {get_param: ldap_insecure}
            $OPENSHIFT_SDN: {get_param: openshift_sdn}
            $DEPLOY_REGISTRY: {get_param: deploy_registry}
            $DEPLOY_ROUTER: {get_param: deploy_router}
          template: {get_file: fragments/master-ansible.sh}

  deployment_dns_node_add:
    type: OS::Heat::SoftwareDeployment
    properties:
      config:
        get_param: dns_node_add
      server:
        get_param: dns_node
      input_values:
        node_etc_host:
          str_replace:
              template: "IP HOST-SUFFIX.DOMAIN HOST-SUFFIX #openshift"
              params:
                IP: {get_attr: [floating_ip, floating_ip_address]}
                HOST: {get_param: hostname_prefix}
                SUFFIX: {get_attr: [random_hostname_suffix, value]}
                DOMAIN: {get_param: domain_name}

  wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: wait_handle}
      timeout: {get_param: timeout}

  wait_handle:
    type: OS::Heat::WaitConditionHandle

outputs:
  console_url:
    value:
      str_replace:
        params:
          HOSTNAME: {get_param: hostname_prefix}
          SUFFIX: {get_attr: [random_hostname_suffix, value]}
          DOMAINNAME: {get_param: domain_name}
        template: "https://HOSTNAME-SUFFIX.DOMAINNAME:8443/console/"
  api_url:
    value:
      str_replace:
        params:
          HOSTNAME: {get_param: hostname_prefix}
          SUFFIX: {get_attr: [random_hostname_suffix, value]}
          DOMAINNAME: {get_param: domain_name}
        template: "https://HOSTNAME-SUFFIX.DOMAINNAME:8443/"
  wc_data:
    value: { get_attr: ['wait_condition', 'data'] }
  hostname:
    value:
      str_replace:
        template: "HOST-SUFFIX"
        params:
          HOST: {get_param: hostname_prefix}
          SUFFIX: {get_attr: [random_hostname_suffix, value]}
  host:
    value: {get_resource: host}
  run_ansible:
    value: {get_resource: run_ansible}
